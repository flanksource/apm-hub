//go:build !ignore_autogenerated
// +build !ignore_autogenerated

/*
Copyright 2023.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by controller-gen. DO NOT EDIT.

package logs

import (
	"github.com/flanksource/kommons"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CommonBackend) DeepCopyInto(out *CommonBackend) {
	*out = *in
	if in.Routes != nil {
		in, out := &in.Routes, &out.Routes
		*out = make(Routes, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CommonBackend.
func (in *CommonBackend) DeepCopy() *CommonBackend {
	if in == nil {
		return nil
	}
	out := new(CommonBackend)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ElasticSearchBackendConfig) DeepCopyInto(out *ElasticSearchBackendConfig) {
	*out = *in
	in.CommonBackend.DeepCopyInto(&out.CommonBackend)
	in.Fields.DeepCopyInto(&out.Fields)
	if in.CloudID != nil {
		in, out := &in.CloudID, &out.CloudID
		*out = new(kommons.EnvVar)
		(*in).DeepCopyInto(*out)
	}
	if in.APIKey != nil {
		in, out := &in.APIKey, &out.APIKey
		*out = new(kommons.EnvVar)
		(*in).DeepCopyInto(*out)
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(kommons.EnvVar)
		(*in).DeepCopyInto(*out)
	}
	if in.Password != nil {
		in, out := &in.Password, &out.Password
		*out = new(kommons.EnvVar)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ElasticSearchBackendConfig.
func (in *ElasticSearchBackendConfig) DeepCopy() *ElasticSearchBackendConfig {
	if in == nil {
		return nil
	}
	out := new(ElasticSearchBackendConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ElasticSearchFields) DeepCopyInto(out *ElasticSearchFields) {
	*out = *in
	if in.Exclusions != nil {
		in, out := &in.Exclusions, &out.Exclusions
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ElasticSearchFields.
func (in *ElasticSearchFields) DeepCopy() *ElasticSearchFields {
	if in == nil {
		return nil
	}
	out := new(ElasticSearchFields)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FileSearchBackendConfig) DeepCopyInto(out *FileSearchBackendConfig) {
	*out = *in
	in.CommonBackend.DeepCopyInto(&out.CommonBackend)
	if in.Paths != nil {
		in, out := &in.Paths, &out.Paths
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FileSearchBackendConfig.
func (in *FileSearchBackendConfig) DeepCopy() *FileSearchBackendConfig {
	if in == nil {
		return nil
	}
	out := new(FileSearchBackendConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KubernetesSearchBackendConfig) DeepCopyInto(out *KubernetesSearchBackendConfig) {
	*out = *in
	in.CommonBackend.DeepCopyInto(&out.CommonBackend)
	if in.Kubeconfig != nil {
		in, out := &in.Kubeconfig, &out.Kubeconfig
		*out = new(kommons.EnvVar)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KubernetesSearchBackendConfig.
func (in *KubernetesSearchBackendConfig) DeepCopy() *KubernetesSearchBackendConfig {
	if in == nil {
		return nil
	}
	out := new(KubernetesSearchBackendConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpenSearchBackendConfig) DeepCopyInto(out *OpenSearchBackendConfig) {
	*out = *in
	in.CommonBackend.DeepCopyInto(&out.CommonBackend)
	in.Fields.DeepCopyInto(&out.Fields)
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(kommons.EnvVar)
		(*in).DeepCopyInto(*out)
	}
	if in.Password != nil {
		in, out := &in.Password, &out.Password
		*out = new(kommons.EnvVar)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpenSearchBackendConfig.
func (in *OpenSearchBackendConfig) DeepCopy() *OpenSearchBackendConfig {
	if in == nil {
		return nil
	}
	out := new(OpenSearchBackendConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SearchBackendConfig) DeepCopyInto(out *SearchBackendConfig) {
	*out = *in
	if in.ElasticSearch != nil {
		in, out := &in.ElasticSearch, &out.ElasticSearch
		*out = new(ElasticSearchBackendConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.OpenSearch != nil {
		in, out := &in.OpenSearch, &out.OpenSearch
		*out = new(OpenSearchBackendConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.Kubernetes != nil {
		in, out := &in.Kubernetes, &out.Kubernetes
		*out = new(KubernetesSearchBackendConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(FileSearchBackendConfig)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SearchBackendConfig.
func (in *SearchBackendConfig) DeepCopy() *SearchBackendConfig {
	if in == nil {
		return nil
	}
	out := new(SearchBackendConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SearchRoute) DeepCopyInto(out *SearchRoute) {
	*out = *in
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SearchRoute.
func (in *SearchRoute) DeepCopy() *SearchRoute {
	if in == nil {
		return nil
	}
	out := new(SearchRoute)
	in.DeepCopyInto(out)
	return out
}
