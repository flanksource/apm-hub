name: Create Release
on:
  push:
    branches:
      - main
  repository_dispatch:
    types: [retry-job]

jobs:
  semantic-release:
    runs-on: ubuntu-latest
    outputs:
      release-version: ${{ steps.semantic.outputs.release-version }}
      new-release-published: ${{ steps.semantic.outputs.new-release-published }}
    steps:
      - uses: actions/checkout@v2
      - uses: codfish/semantic-release-action@v1
        id: semantic
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Retry on failure of build
        if: failure()
        uses: mvasigh/dispatch-action@main
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          repo: apm-hub
          owner: flanksource
          event_type: retry-job
  binary:
    runs-on: ubuntu-latest
    needs: semantic-release
    steps:
      - uses: actions/checkout@v2
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: v1.20.x
      - uses: actions/cache@v2
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
            .bin
          key: cache-${{ hashFiles('**/go.sum') }}-${{ hashFiles('.bin/*') }}
          restore-keys: |
            cache-
      - run: make release
        env:
          VERSION: v${{ needs.semantic-release.outputs.release-version }}
      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ./.release/*
          tag: v${{ needs.semantic-release.outputs.release-version }}
          overwrite: true
          file_glob: true
  docker:
    needs: semantic-release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set version
        # Always use git tags as semantic release can fail due to rate limit
        run: |
          git fetch --prune --unshallow
          echo "RELEASE_VERSION=$(git describe --abbrev=0 --tags | sed -e 's/^v//')" >> $GITHUB_ENV
      - name: Publish to Registry
        uses: elgohr/Publish-Docker-Github-Action@master
        with:
          name: flanksource/apm-hub
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          snapshot: true
          tags: "latest,v${{ env.RELEASE_VERSION }}"
          cache: true
  helm:
    runs-on: ubuntu-latest
    needs: semantic-release
    steps:
      - uses: actions/checkout@v3
      - name: Set version
        # Always use git tags as semantic release can fail due to rate limit
        run: |
          git fetch --prune --unshallow
          echo "RELEASE_VERSION=$(git describe --abbrev=0 --tags | sed -e 's/^v//')" >> $GITHUB_ENV
      - name: Update image tags
        uses: mikefarah/yq@master
        with:
          cmd: |
            yq -i e '.version = "${{ env.RELEASE_VERSION }}"' chart/Chart.yaml
            yq -i e '.appVersion = "${{ env.RELEASE_VERSION }}"' chart/Chart.yaml
            yq -i e '.image.tag = "v${{ env.RELEASE_VERSION }}"' chart/values.yaml
      - name: Set up Helm
        uses: azure/setup-helm@v1
        with:
          version: v3.8.0
      - name: Package Helm chart
        run: |
          helm package ./chart
      - name: Clone charts repo
        uses: actions/checkout@v3
        with:
          repository: "${{ github.repository_owner }}/charts"
          path: charts
          token: "${{ secrets.FLANKBOT }}"
      - name: Update chart repo
        run: |
          cd charts
          cp ../apm-hub-*.tgz ./
          helm repo index --merge index.yaml .
      - name: Push changes to chart repo
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: "Release ${{env.RELEASE_VERSION }} of ${{ github.repository }}"
          branch: gh-pages
          repository: ./charts
